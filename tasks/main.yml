---
# tasks file for rsyslog

- name: import assert.yml
  ansible.builtin.import_tasks: assert.yml
  run_once: yes
  delegate_to: localhost

- name: uninstall conflicting systemd-logger
  ansible.builtin.package:
    name: systemd-logger
    state: absent

- name: install rsyslog
  ansible.builtin.package:
    name: "{{ rsyslog_packages }}"
    state: "{{ rsyslog_package_state }}"

- name: install additional rsyslog packages
  ansible.builtin.package:
    name: "rsyslog-{{ item }}"
    state: "{{ rsyslog_package_state }}"
  loop: "{{ rsyslog_features }}"

- name: configuring default rsyslog
  ansible.builtin.template:
    src: "{{ rsyslog_config_file_format }}_rsyslog.conf.j2"
    dest: /etc/rsyslog.conf
    mode: "0644"
  when:
    - rsyslog_deploy_default_config
  notify:
    - restart rsyslog

- name: make configuration directory
  ansible.builtin.file:
    name: /etc/rsyslog.d/
    state: directory
    mode: "0755"

- name: configuring {{ rsyslog_forward_rule_name }} rsyslog forward rule
  ansible.builtin.template:
    src: "forward_rule.conf.j2"
    dest: /etc/rsyslog.d/{{ rsyslog_forward_rule_name }}.conf
    mode: "0644"
  when:
    - not rsyslog_deploy_default_config
  notify:
    - restart rsyslog

- name: configuring advanced {{ rsyslog_forward_rule_name }} rsyslog forward rule
  ansible.builtin.template:
    src: "advanced_forward_rule.conf.j2"
    dest: /etc/rsyslog.d/{{ rsyslog_forward_rule_name }}.conf
    mode: "0644"
  when:
    - rsyslog_deploy_default_config
    - rsyslog_config_file_format != "legacy"
    - rsyslog_remote is defined
    - rsyslog_remote | length > 0
  notify:
    - restart rsyslog

- name: configuring additional config files
  ansible.builtin.copy:
    content: "{{ item.value.content | default('') }}"
    dest: "/etc/rsyslog.d/{{ item.key }}.conf"
    validate: "{{ 'rsyslogd -N1 -f %s' if item.value.validate | default(false) else 'true %s' }}"
    owner: root
    group: root
    mode: 0440
  with_dict: "{{ rsyslog_rsyslog_d_files }}"
  when: item.value.state | default('present') == 'present'
  notify: restart rsyslog

- name: start and enable rsyslog
  ansible.builtin.service:
    name: "{{ rsyslog_service }}"
    state: started
    enabled: yes
